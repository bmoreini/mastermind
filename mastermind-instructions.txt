/* Mastermind I - no saved turns */

/* Initialization */
//colors, code, guess, feedback, cleanFeedback -- all arrays -- and turn
// colors = r,b,g,w,c,y
// add arrays for thisTurn, turnRecords

/* Main Function */
// define Main function
	// set code equal to setCode function
	// start while loop - check if 4 b's or first guess != q
		// increment turn
		// set guess = getGuess
		// set feedback = testGuess(code, guess)
		// populate thisTurn with guess and feedback
		// push thisTurn to turnRecords
		// alert turn, thisTurn
	// }
	// alert "Charlie you've won" if while loop ended with first condition
	// alert "Quitter!" if while loop ended with section condition
//}

/* Functions */

/* Create the Secret Code */
// define function setCode to receive colors and randomly fill code with four values 0-5

/* Get a Player's Guess */
// define function getGuess to prompt player for each of four colors and stores in guess array

/* Analyze the Guess */
// define function testGuess to receive code and guess, and analyze guess against code and produces feedback
  	// initialize the tempCode and tempGuess arrays as copies using array.slice(0);
	// count the blacks and erase tempCode and tempGuess as you go - one loop
	// count the whites and erase tempCode and tempGuess as you go - nested loops
        // use "continue" once a match is found in the inner loop
	// set feedback == call feedback function, sending it black and white counts
	// return the feedback


/* Format the Feedback */
// define function formatFeedback to receive feedback and analyze input, put b's first, w's second, delete the rest
	// initialize feedback;
	// count the blacks and whites in a loop
	// write the black pegs first to cleanFeedback
	// write the white pegs second to cleanFeedback
	// console log the feedback
	// return the new feedback array

/* Define function addTurn to make an array thisTurn from Guess and Feedback */
	// initialize thisTurn;
	// set turnValues = 4 + length of feedback
	// write turnvalues into thisTurn
		// if index 0 - 3, write guess sub index
		// if index > 3, write feedback sub index-4 to correct for position
	// console log thisTurn
	// return thisTurn
